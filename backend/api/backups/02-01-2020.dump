--
-- PostgreSQL database dump
--

-- Dumped from database version 11.6
-- Dumped by pg_dump version 11.6

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: pgcrypto; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS pgcrypto WITH SCHEMA public;


--
-- Name: EXTENSION pgcrypto; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION pgcrypto IS 'cryptographic functions';


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: github_detail; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.github_detail (
    resource_id integer,
    owner text,
    repository_name text,
    path text,
    readme_path text DEFAULT ''::text
);


ALTER TABLE public.github_detail OWNER TO postgres;

--
-- Name: rating; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.rating (
    id integer NOT NULL,
    resource_id integer,
    onestar integer DEFAULT 0,
    twostar integer DEFAULT 0,
    threestar integer DEFAULT 0,
    fourstar integer DEFAULT 0,
    fivestar integer DEFAULT 0
);


ALTER TABLE public.rating OWNER TO postgres;

--
-- Name: rating_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.rating_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.rating_id_seq OWNER TO postgres;

--
-- Name: rating_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.rating_id_seq OWNED BY public.rating.id;


--
-- Name: resource; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resource (
    id integer NOT NULL,
    name text NOT NULL,
    description text DEFAULT ''::text,
    downloads integer DEFAULT 0,
    rating numeric DEFAULT 0.0,
    github text DEFAULT ''::text,
    type text DEFAULT 'task'::text NOT NULL,
    verified boolean DEFAULT false
);


ALTER TABLE public.resource OWNER TO postgres;

--
-- Name: resource_raw_path; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resource_raw_path (
    resource_id integer,
    raw_path text,
    type text DEFAULT 'task'::text
);


ALTER TABLE public.resource_raw_path OWNER TO postgres;

--
-- Name: resource_tag; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.resource_tag (
    resource_id integer NOT NULL,
    tag_id integer NOT NULL
);


ALTER TABLE public.resource_tag OWNER TO postgres;

--
-- Name: tag; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tag (
    id integer NOT NULL,
    name text NOT NULL
);


ALTER TABLE public.tag OWNER TO postgres;

--
-- Name: tag_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.tag_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.tag_id_seq OWNER TO postgres;

--
-- Name: tag_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.tag_id_seq OWNED BY public.tag.id;


--
-- Name: task_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

CREATE SEQUENCE public.task_id_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;


ALTER TABLE public.task_id_seq OWNER TO postgres;

--
-- Name: task_id_seq; Type: SEQUENCE OWNED BY; Schema: public; Owner: postgres
--

ALTER SEQUENCE public.task_id_seq OWNED BY public.resource.id;


--
-- Name: user_credential; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_credential (
    id integer NOT NULL,
    username text NOT NULL,
    first_name text NOT NULL,
    last_name text,
    email text,
    token text DEFAULT ''::text
);


ALTER TABLE public.user_credential OWNER TO postgres;

--
-- Name: user_rating; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_rating (
    user_id integer NOT NULL,
    resource_id integer NOT NULL,
    stars integer DEFAULT 0
);


ALTER TABLE public.user_rating OWNER TO postgres;

--
-- Name: user_resource; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.user_resource (
    resource_id integer NOT NULL,
    user_id integer NOT NULL
);


ALTER TABLE public.user_resource OWNER TO postgres;

--
-- Name: rating id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rating ALTER COLUMN id SET DEFAULT nextval('public.rating_id_seq'::regclass);


--
-- Name: resource id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resource ALTER COLUMN id SET DEFAULT nextval('public.task_id_seq'::regclass);


--
-- Name: tag id; Type: DEFAULT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag ALTER COLUMN id SET DEFAULT nextval('public.tag_id_seq'::regclass);


--
-- Data for Name: github_detail; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.github_detail (resource_id, owner, repository_name, path, readme_path) FROM stdin;
122	tektoncd	catalog	argocd/argocd.yaml	argocd/README.md
123	tektoncd	catalog	azure-cli/azure_cli.yaml	azure-cli/README.md
121	tektoncd	catalog	ansible-tower-cli/ansible-tower-cli-task.yaml	ansible-tower-cli/README.md
124	tektoncd	catalog	buildah/buildah.yaml	buildah/README.md
125	tektoncd	catalog	buildkit-daemonless/buildkit-daemonless.yaml	buildkit-daemonless/README.md
126	tektoncd	catalog	buildkit/task.yaml	buildkit/README.md
127	tektoncd	catalog	buildpacks/buildpacks-v3.yaml	buildpacks/README.md
128	tektoncd	catalog	conftest/helm-conftest.yaml	conftest/README.md
129	tektoncd	catalog	gcloud/gcloud.yaml	gcloud/README.md
130	tektoncd	catalog	gke-deploy/gke-deploy.yaml	gke-deploy/README.md
131	tektoncd	catalog	golang/tests.yaml	golang/README.md
132	tektoncd	catalog	jib-maven/jib-maven.yaml	jib-maven/README.md
133	tektoncd	catalog	kaniko/kaniko.yaml	kaniko/README.md
134	tektoncd	catalog	kn/kn.yaml	kn/README.md
135	tektoncd	catalog	knctl/knctl-deploy.yaml	knctl/README.md
136	tektoncd	catalog	kubeval/kubeval.yaml	kubeval/README.md
137	tektoncd	catalog	makisu/makisu.yaml	makisu/README.md
138	tektoncd	catalog	maven/maven.yaml	maven/README.md
139	tektoncd	catalog	openshift-client/openshift-client-task.yaml	openshift-client/README.md
140	tektoncd	catalog	openwhisk/service-account.yaml	openwhisk/README.md
141	tektoncd	catalog	s2i/s2i.yaml	s2i/README.md
142	tektoncd	catalog	terraform-cli/terraform-cli-task.yaml	terraform-cli/README.md
143	tektoncd	catalog	tkn/tkn.yaml	tkn/README.md
\.


--
-- Data for Name: rating; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.rating (id, resource_id, onestar, twostar, threestar, fourstar, fivestar) FROM stdin;
\.


--
-- Data for Name: resource; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.resource (id, name, description, downloads, rating, github, type, verified) FROM stdin;
121	ansible-tower-cli	Ansible Tower (formerly ‘AWX’) is a web-based solution that makes Ansible even more easy to use for IT teams of all kinds, It provides the tower-cli(Tower-CLI) command line tool that simplifies the tasks of starting jobs, workflow jobs, manage users, projects etc.	0	0	http://github.com/tektoncd/catalog	task	f
122	argocd	This task syncs (deploys) an Argo CD application and waits for it to be healthy. To do so, it requires the address of the Argo CD server and some form of authentication - either a username/password or an authentication token.	0	0	http://github.com/tektoncd/catalog	task	f
123	azure-cli	This task performs operations on Microsoft Azure resources using az.	0	0	http://github.com/tektoncd/catalog	task	f
124	buildah	This Task builds source into a container image using Project Atomic's Buildah build tool. It uses Buildah's support for building from Dockerfiles, using its buildah bud command. This command executes the directives in the Dockerfile to assemble a container image, then pushes that image to a container registry.	0	0	http://github.com/tektoncd/catalog	task	f
125	buildkit-daemonless	This buildkit-daemonless Task is similar to buildkit but does not need creating Secret, Deployment, and Service resources for setting up the buildkitd daemon cluster.	0	0	http://github.com/tektoncd/catalog	task	f
126	buildkit	This Task builds source into a container image using Moby BuildKit.	0	0	http://github.com/tektoncd/catalog	task	f
127	buildpacks	This build template builds source into a container image using Cloud Native Buildpacks.	0	0	http://github.com/tektoncd/catalog	task	f
128	conftest	These tasks make it possible to use Conftest within your Tekton pipelines. Conftest is a tool for testing configuration files using Open Policy Agent.	0	0	http://github.com/tektoncd/catalog	task	f
129	gcloud	This task performs operations on Google Cloud Platform resources using gcloud.	0	0	http://github.com/tektoncd/catalog	task	f
130	gke-deploy	This Task deploys an application to a Google Kubernetes Engine cluster using gke-deploy.	0	0	http://github.com/tektoncd/catalog	task	f
131	golang	These Tasks are Golang task to build, test and validate Go projects.	0	0	http://github.com/tektoncd/catalog	task	f
132	jib-maven	This Task builds Java/Kotlin/Groovy/Scala source into a container image using Google's Jib tool.	0	0	http://github.com/tektoncd/catalog	task	f
133	kaniko	This Task builds source into a container image using Google's kaniko tool.	0	0	http://github.com/tektoncd/catalog	task	f
134	kn	This Task performs operations on Knative resources (services, revisions, routes) using kn CLI.	0	0	http://github.com/tektoncd/catalog	task	f
135	knctl	This Task deploys (or update) a Knative service. It uses knctl for that, and supports only the deploy subcommand as of today.	0	0	http://github.com/tektoncd/catalog	task	f
136	kubeval	This task makes it possible to use Kubeval within your Tekton pipelines. Kubeval is a tool used for validating Kubernetes configuration files.	0	0	http://github.com/tektoncd/catalog	task	f
137	makisu	This Task builds source into a container image using uber's makisu tool.	0	0	http://github.com/tektoncd/catalog	task	f
138	maven	This Task can be used to run a Maven build.	0	0	http://github.com/tektoncd/catalog	task	f
139	openshift-client	OpenShift is a Kubernetes distribution from Red Hat which provides oc, the OpenShift CLI that complements kubectl for simplifying deployment and configuration applications on OpenShift.	0	0	http://github.com/tektoncd/catalog	task	f
140	openwhisk	This directory contains Tekton Task which can be used to Build and Serve Knative compatible applications (i.e., OpenWhisk Actions) on Kubernetes.	0	0	http://github.com/tektoncd/catalog	task	f
141	s2i	Source-to-Image (S2I) is a toolkit and workflow for building reproducible container images from source code. S2I produces images by injecting source code into a base S2I container image and letting the container prepare that source code for execution. The base S2I container images contains the language runtime and build tools needed for building and running the source code.	0	0	http://github.com/tektoncd/catalog	task	f
142	terraform-cli	Terraform is an open-source infrastructure as codesoftware tool created by HashiCorp. It enables users to define and provision a datacenter infrastructure using a high-level configuration language known as Hashicorp Configuration Language (HCL), or optionally JSON	0	0	http://github.com/tektoncd/catalog	task	f
143	tkn	This task performs operations on Tekton resources using tkn.	0	0	http://github.com/tektoncd/catalog	task	f
\.


--
-- Data for Name: resource_raw_path; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.resource_raw_path (resource_id, raw_path, type) FROM stdin;
121	https://raw.githubusercontent.com/tektoncd/catalog/master/ansible-tower-cli/ansible-tower-cli-task.yaml	task
122	https://raw.githubusercontent.com/tektoncd/catalog/master/argocd/argocd.yaml	task
123	https://raw.githubusercontent.com/tektoncd/catalog/master/azure-cli/azure_cli.yaml	task
124	https://raw.githubusercontent.com/tektoncd/catalog/master/buildah/buildah.yaml	task
125	https://raw.githubusercontent.com/tektoncd/catalog/master/buildkit-daemonless/buildkit-daemonless.yaml	task
126	https://raw.githubusercontent.com/tektoncd/catalog/master/buildkit/deployment+service.privileged.yaml	task
126	https://raw.githubusercontent.com/tektoncd/catalog/master/buildkit/deployment+service.rootless.yaml	task
126	https://raw.githubusercontent.com/tektoncd/catalog/master/buildkit/task.yaml	task
127	https://raw.githubusercontent.com/tektoncd/catalog/master/buildpacks/buildpacks-v3.yaml	task
128	https://raw.githubusercontent.com/tektoncd/catalog/master/conftest/conftest.yaml	task
128	https://raw.githubusercontent.com/tektoncd/catalog/master/conftest/helm-conftest.yaml	task
129	https://raw.githubusercontent.com/tektoncd/catalog/master/gcloud/gcloud.yaml	task
130	https://raw.githubusercontent.com/tektoncd/catalog/master/gke-deploy/build-push-gke-deploy.yaml	task
130	https://raw.githubusercontent.com/tektoncd/catalog/master/gke-deploy/gke-deploy.yaml	task
131	https://raw.githubusercontent.com/tektoncd/catalog/master/golang/build.yaml	task
131	https://raw.githubusercontent.com/tektoncd/catalog/master/golang/lint.yaml	task
131	https://raw.githubusercontent.com/tektoncd/catalog/master/golang/tests.yaml	task
132	https://raw.githubusercontent.com/tektoncd/catalog/master/jib-maven/jib-maven.yaml	task
133	https://raw.githubusercontent.com/tektoncd/catalog/master/kaniko/kaniko.yaml	task
134	https://raw.githubusercontent.com/tektoncd/catalog/master/kn/kn-deployer.yaml	task
134	https://raw.githubusercontent.com/tektoncd/catalog/master/kn/kn.yaml	task
135	https://raw.githubusercontent.com/tektoncd/catalog/master/knctl/knctl-deploy.yaml	task
136	https://raw.githubusercontent.com/tektoncd/catalog/master/kubeval/kubeval.yaml	task
137	https://raw.githubusercontent.com/tektoncd/catalog/master/makisu/makisu.yaml	task
138	https://raw.githubusercontent.com/tektoncd/catalog/master/maven/maven.yaml	task
139	https://raw.githubusercontent.com/tektoncd/catalog/master/openshift-client/openshift-client-kubecfg-task.yaml	task
139	https://raw.githubusercontent.com/tektoncd/catalog/master/openshift-client/openshift-client-task.yaml	task
140	https://raw.githubusercontent.com/tektoncd/catalog/master/openwhisk/openwhisk.yaml	task
140	https://raw.githubusercontent.com/tektoncd/catalog/master/openwhisk/service-account.yaml	task
141	https://raw.githubusercontent.com/tektoncd/catalog/master/s2i/s2i.yaml	task
142	https://raw.githubusercontent.com/tektoncd/catalog/master/terraform-cli/terraform-cli-task.yaml	task
143	https://raw.githubusercontent.com/tektoncd/catalog/master/tkn/tkn.yaml	task
\.


--
-- Data for Name: resource_tag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.resource_tag (resource_id, tag_id) FROM stdin;
121	1
121	2
121	3
122	4
122	27
123	2
124	5
124	2
125	6
126	6
126	7
128	8
128	9
129	12
129	4
131	6
132	8
133	10
133	11
132	13
133	14
133	6
133	15
133	16
134	18
134	22
135	22
135	18
135	2
136	10
136	9
136	19
137	6
139	20
139	2
140	21
140	22
141	23
141	6
142	2
143	2
\.


--
-- Data for Name: tag; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tag (id, name) FROM stdin;
1	ansible
2	cli
3	automation
4	deploy
5	containers
6	build
7	daemon
8	test
9	configuration
10	validate
11	go
12	google-cloud
13	java
14	maven
15	kotlin
16	gradle
17	google
18	serverless
19	kubernetes
20	openshift
21	openwhisk
22	knative
23	s2i
35	utility
25	nodejs
26	perl
27	git
\.


--
-- Data for Name: user_credential; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_credential (id, username, first_name, last_name, email, token) FROM stdin;
21128732	github	github	\N	\N	b58f8cad8c885bf6e427f0c19d150ffdd7d881ec
\.


--
-- Data for Name: user_rating; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_rating (user_id, resource_id, stars) FROM stdin;
\.


--
-- Data for Name: user_resource; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.user_resource (resource_id, user_id) FROM stdin;
\.


--
-- Name: rating_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.rating_id_seq', 22, true);


--
-- Name: tag_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.tag_id_seq', 27, true);


--
-- Name: task_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.task_id_seq', 145, true);


--
-- Name: rating rating_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rating
    ADD CONSTRAINT rating_pkey PRIMARY KEY (id);


--
-- Name: rating rating_task_id_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rating
    ADD CONSTRAINT rating_task_id_key UNIQUE (resource_id);


--
-- Name: tag tag_name_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_name_key UNIQUE (name);


--
-- Name: tag tag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tag
    ADD CONSTRAINT tag_pkey PRIMARY KEY (id);


--
-- Name: resource task_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resource
    ADD CONSTRAINT task_pkey PRIMARY KEY (id);


--
-- Name: resource_tag task_tag_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resource_tag
    ADD CONSTRAINT task_tag_pkey PRIMARY KEY (resource_id, tag_id);


--
-- Name: user_credential user_credential_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_credential
    ADD CONSTRAINT user_credential_pkey PRIMARY KEY (id);


--
-- Name: user_credential user_credential_username_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_credential
    ADD CONSTRAINT user_credential_username_key UNIQUE (username);


--
-- Name: user_rating user_rating_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_rating
    ADD CONSTRAINT user_rating_pkey PRIMARY KEY (user_id, resource_id);


--
-- Name: user_resource user_task_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_resource
    ADD CONSTRAINT user_task_pkey PRIMARY KEY (resource_id, user_id);


--
-- Name: github_detail github_detail_resource_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.github_detail
    ADD CONSTRAINT github_detail_resource_id_fkey FOREIGN KEY (resource_id) REFERENCES public.resource(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: rating rating_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.rating
    ADD CONSTRAINT rating_task_id_fkey FOREIGN KEY (resource_id) REFERENCES public.resource(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: resource_raw_path resource_raw_path_resource_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resource_raw_path
    ADD CONSTRAINT resource_raw_path_resource_id_fkey FOREIGN KEY (resource_id) REFERENCES public.resource(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: resource_tag task_tag_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.resource_tag
    ADD CONSTRAINT task_tag_task_id_fkey FOREIGN KEY (resource_id) REFERENCES public.resource(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: user_rating user_rating_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_rating
    ADD CONSTRAINT user_rating_task_id_fkey FOREIGN KEY (resource_id) REFERENCES public.resource(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- Name: user_resource user_task_task_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.user_resource
    ADD CONSTRAINT user_task_task_id_fkey FOREIGN KEY (resource_id) REFERENCES public.resource(id) ON UPDATE CASCADE ON DELETE CASCADE;


--
-- PostgreSQL database dump complete
--

